Область видимости — определяет, какие перменные доступны вам. Существует два типа областей 
видимости глобальная и локальная.

Глобальная область видимости — самая внешнаяя область видимости. Если переменная объявлена вне
всех функций или фигурных скобок, то считается, что она определена в глобальной области
видимости и эту перменную будет видно в любом месте программы.

Лексическое окружение — это хранилище для данных в памяти и механизм для извлечения этих
данных при обращении.

Локальная область видимости — это любая область видимости определенная после глобальной,
бывает: блочной, функциональной, модульная.

Лексическая область видимости — означает, что область действия переменной определяется 
по её располжению в коде, и вложенные функции имеют доступ к переменным, объявленным вовне.

Замыкание — это функция, которая запоминает свои внешние переменные и может получить к ним доступ.
В JavaScript все функции изначально являются замыканиями. То есть, они автоматически запоминают
где были созданы, с помощью скрытого свойства [[Environment]] и все они могут получить доступ
к внешним переменным.

Дополнительно по замыканиям:
  - Все переменные и параметры функций являются свойствами объекта переменных LexicalEnvironment. 
    Каждый запуск функции создаёт новый такой объект. На верхнем уровне им является «глобальный объект», 
    в браузере – window.
  - При создании функция получает системное свойство [[Scope]], которое ссылается на LexicalEnvironment, 
    в котором она была создана.
  - При вызове функции, куда бы её ни передали в коде – она будет искать переменные сначала у себя, 
    а затем во внешних LexicalEnvironment с места своего «рождения».


